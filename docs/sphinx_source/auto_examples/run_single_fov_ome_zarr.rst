
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\run_single_fov_ome_zarr.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_run_single_fov_ome_zarr.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_single_fov_ome_zarr.py:


Single-FOV OME-Zarr
===================

This script shows how to create a single-FOV, single-scale OME-Zarr dataset,
read data in read-only mode,
append an extra time point to an existing dataset,
and adding a new channel to an existing dataset.

.. GENERATED FROM PYTHON SOURCE LINES 12-19

.. code-block:: Python

    import os
    from tempfile import TemporaryDirectory

    import numpy as np

    from iohub.ngff import open_ome_zarr


.. GENERATED FROM PYTHON SOURCE LINES 20-21

Set storage path

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python

    tmp_dir = TemporaryDirectory()
    store_path = os.path.join(tmp_dir.name, "ome.zarr")
    print("Zarr store path", store_path)


.. GENERATED FROM PYTHON SOURCE LINES 26-27

Write 5D data to a new Zarr store

.. GENERATED FROM PYTHON SOURCE LINES 27-37

.. code-block:: Python


    tczyx = np.random.randint(
        0, np.iinfo(np.uint16).max, size=(5, 2, 3, 32, 32), dtype=np.uint16
    )

    with open_ome_zarr(
        store_path, layout="fov", mode="a", channel_names=["DAPI", "GFP"]
    ) as dataset:
        dataset["img"] = tczyx


.. GENERATED FROM PYTHON SOURCE LINES 38-39

Opening in read-only mode prevents writing

.. GENERATED FROM PYTHON SOURCE LINES 39-49

.. code-block:: Python


    with open_ome_zarr(store_path, layout="auto", mode="r") as dataset:
        img = dataset["img"]
        print(img)
        print(img.numpy())
        try:
            img[0, 0, 0, 0, 0] = 0
        except Exception as e:
            print(f"Writing was rejected: {e}")


.. GENERATED FROM PYTHON SOURCE LINES 50-51

Append a new timepoint to an existing dataset

.. GENERATED FROM PYTHON SOURCE LINES 51-62

.. code-block:: Python


    new_1czyx = np.random.randint(
        0, np.iinfo(np.uint16).max, size=(1, 2, 3, 32, 32), dtype=np.uint16
    )

    with open_ome_zarr(store_path, layout="fov", mode="r+") as dataset:
        img = dataset["img"]
        print(img.shape)
        img.append(new_1czyx, axis=0)
        print(img.shape)


.. GENERATED FROM PYTHON SOURCE LINES 63-64

Modify channels

.. GENERATED FROM PYTHON SOURCE LINES 64-96

.. code-block:: Python


    # Open the dataset used above
    dataset = open_ome_zarr(store_path, mode="r+")
    dataset.print_tree()

    # Append a new channel and write a Z-stack
    new_zyx = np.random.randint(
        0, np.iinfo(np.uint16).max, size=(3, 32, 32), dtype=np.uint16
    )
    dataset.append_channel("New", resize_arrays=True)
    dataset["img"][0, 2] = new_zyx
    print(dataset.channel_names)
    dataset.print_tree()

    # Rename the new channel
    dataset.rename_channel("New", "Renamed")
    print(dataset.channel_names)

    # Write new data to the channel
    new_tzyx = np.random.randint(
        0, np.iinfo(np.uint16).max, size=(6, 3, 32, 32), dtype=np.uint16
    )
    c_idx = dataset.get_channel_index("Renamed")
    dataset["img"][:, c_idx] = new_tzyx

    # Which is equivalent to:
    if False:  # remove this line
        dataset.update_channel("Renamed", target="img", data=new_tzyx)

    # Close the dataset
    dataset.close()


.. GENERATED FROM PYTHON SOURCE LINES 97-98

Try viewing the images with napari-ome-zarr

.. GENERATED FROM PYTHON SOURCE LINES 100-101

Clean up

.. GENERATED FROM PYTHON SOURCE LINES 101-101

.. code-block:: Python

    tmp_dir.cleanup()

.. _sphx_glr_download_auto_examples_run_single_fov_ome_zarr.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_single_fov_ome_zarr.ipynb <run_single_fov_ome_zarr.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_single_fov_ome_zarr.py <run_single_fov_ome_zarr.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: run_single_fov_ome_zarr.zip <run_single_fov_ome_zarr.zip>`
