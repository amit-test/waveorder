[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "waveorder"
description = "Wave-optical simulations and deconvolution of optical properties"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "CZ Biohub SF", email = "compmicro@czbiohub.org" }]
maintainers = [
  { name = "Talon Chandler", email = "talon.chandler@czbiohub.org" },
  { name = "Shalin Mehta", email = "shalin.mehta@czbiohub.org" },
]
keywords = [
  "simulation",
  'optics',
  'phase',
  'scattering',
  'polarization',
  'label-free',
  'permittivity',
  "reconstruction-algorithm",
  'qlipp',
  'mipolscope',
  'permittivity-tensor-imaging',
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
]
dependencies = [
  "numpy>=1.24",
  "matplotlib>=3.1.1",
  "scipy>=1.3.0",
  "pywavelets>=1.1.1",
  "ipywidgets>=7.5.1",
  "torch>=2.4.1",
  
]
dynamic = ["version"]

[project.optional-dependencies]
all = [
  "napari[pyqt6]",
  "napari-ome-zarr>=0.3.2", # drag and drop convenience
  "pycromanager==0.27.2"
]
dev = [
  "pytest>=5.0.0",
  "pytest-cov",
  "pytest-qt",
  "tox",
  "pre-commit",
  "black==25.1.0",
  "hypothesis"
]
examples = ["napari[all]", "jupyter"]

[project.urls]
Homepage = "https://github.com/mehta-lab/waveorder"
Repository = "https://github.com/mehta-lab/waveorder"
Issues = "https://github.com/mehta-lab/waveorder/issues"

[project.scripts]
recorder = "recOrder.cli.main:cli"
recOrder = "recOrder.cli.main:cli"

[options]
packages = find:
include_package_data = True
python_requires = >=3.10
setup_requires = setuptools_scm

[options.entry_points]
napari.manifest =
    waveorder = waveorder:napari.yaml

[options.package_data]
waveorder = napari.yaml

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.setuptools_scm]
write_to = "waveorder/_version.py"